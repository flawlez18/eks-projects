apiVersion: apps/v1
kind: Deployment
metadata:
  name: springapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      labels:
        app: springapp
    spec:
      containers:
      - name: springappcontainer
        image: mylandmarktech/spring-boot-mongo
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_HOSTNAME
          value:  mongosvc
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    #service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0 # allows you to create loadbalancer in private subnet
spec:
  type: LoadBalancer
  selector:
    app: springapp
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
# apiVersion: apps/v1
# kind: ReplicaSet
# metadata:
#   name: mongodb
# spec:
#   selector:
#     matchLabels:
#       app: mongo
#   template:
#     metadata:
#       name: myapp
#       labels:
#         app: mongo
#     spec:
#       containers:
#       - name: mongodbcontainer
#         image: mongo
#         ports:
#         - containerPort: 27017
#         env:
#         - name: MONGO_INITDB_ROOT_USERNAME
#           value: devdb
#         - name: MONGO_INITDB_ROOT_PASSWORD
#           value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: mongosvc
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017
